# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: backend
    ports:
      - 8000:8000

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
       - db
       - redis
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    secrets:
      - db-password
    develop:
      watch:
        - action: rebuild
          path: .
  db:
     image: postgres
     restart: always
     user: postgres
     secrets:
       - db-password
     volumes:
       - db-data:/var/lib/postgresql/data
     environment:
       - POSTGRES_DB=postgres
       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
     expose:
       - 5432
    #  ports:
    #    - 5432:5432
  redis:
    image: redis
    restart: always
    expose:
      - 6379
    # ports:
    #   - 6379:6379
  nextjs:
    build:
      context: frontend
    container_name: frontend
    restart: always
    depends_on:
       - server
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://django:8000/api
      - WS_BASE_URL=ws://django:8000/ws/note
volumes:
   db-data:
secrets:
   db-password:
     file: backend/db/password.txt
